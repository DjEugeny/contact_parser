#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
üîÑ –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
"""

import os
import sys
from pathlib import Path
import logging

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –ª–æ–≥–≥–µ—Ä
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger("FilterReloader")

def reload_filters():
    """–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–∏–ª—å—Ç—Ä—ã –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    
    config_dir = Path("config")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    filters = {
        "filename_excludes": config_dir / "attachment_filename_excludes.txt",
        "subject_filters": config_dir / "filters.txt",
        "blacklist": config_dir / "blacklist.txt"
    }
    
    for filter_name, file_path in filters.items():
        if not file_path.exists():
            logger.error(f"‚ö†Ô∏è –§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            continue
            
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–∞–≤–∏–ª (–Ω–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤)
        active_rules = 0
        with open(file_path, "r", encoding="utf-8") as f:
            for line in f:
                line = line.strip()
                if line and not line.startswith("#"):
                    active_rules += 1
        
        logger.info(f"‚úÖ {filter_name}: –∑–∞–≥—Ä—É–∂–µ–Ω–æ {active_rules} –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–∞–≤–∏–ª –∏–∑ {file_path}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π
    presentation_rules = ["–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è*", "Sales*"]
    filename_excludes_path = filters["filename_excludes"]
    
    if filename_excludes_path.exists():
        with open(filename_excludes_path, "r", encoding="utf-8") as f:
            content = f.read()
            
        for rule in presentation_rules:
            if rule in content:
                logger.info(f"‚úÖ –ü—Ä–∞–≤–∏–ª–æ '{rule}' –Ω–∞–π–¥–µ–Ω–æ –≤ {filename_excludes_path}")
            else:
                logger.warning(f"‚ö†Ô∏è –ü—Ä–∞–≤–∏–ª–æ '{rule}' –ù–ï –ù–ê–ô–î–ï–ù–û –≤ {filename_excludes_path}")
    
    logger.info(f"\nüëâ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, —á—Ç–æ–±—ã —Ñ–∏–ª—å—Ç—Ä—ã –≤—Å—Ç—É–ø–∏–ª–∏ –≤ —Å–∏–ª—É!")
    logger.info(f"üëâ –í—ã–ø–æ–ª–Ω–∏—Ç–µ 'python test_email_run.py' –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Ñ–∏–ª—å—Ç—Ä–æ–≤")

if __name__ == "__main__":
    reload_filters()
