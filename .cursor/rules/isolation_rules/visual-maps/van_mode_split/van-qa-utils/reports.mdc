---
description: Утилита для отчетов по валидации VAN QA
globs: van-qa-utils/reports.mdc
alwaysApply: false
---
# VAN QA: ОТЧЕТЫ ПО ВАЛИДАЦИИ

> **Кратко:** Этот компонент содержит форматы для полных отчетов об успехе и неудаче, генерируемых по завершении процесса валидации QA.

## 📋 ФОРМАТ ПОЛНОГО ОТЧЕТА ОБ УСПЕХЕ

После успешного прохождения всех четырех точек валидации генерируется следующий отчет об успехе:

```
╔═════════════════════ 🔍 ОТЧЕТ ПО ВАЛИДАЦИИ QA ══════════════════════╗
│ ПРОЕКТ: [Название проекта] | ВРЕМЯ: [Текущая дата/время]            │
├─────────────────────────────────────────────────────────────────────┤
│ 1️⃣ ЗАВИСИМОСТИ: ✓ Совместимы                                       │
│ 2️⃣ КОНФИГУРАЦИЯ: ✓ Валидна и совместима                           │
│ 3️⃣ СРЕДА: ✓ Готова                                               │
│ 4️⃣ МИНИМАЛЬНАЯ СБОРКА: ✓ Успешна и пройдена                      │
├─────────────────────────────────────────────────────────────────────┤
│ 🚨 ИТОГОВЫЙ ВЕРДИКТ: ПРОЙДЕНО                                      │
│ ➡️ Разрешено перейти в режим СБОРКИ                                │
╚═════════════════════════════════════════════════════════════════════╝
```

### Пример генерации отчета об успехе:
```powershell
function Generate-SuccessReport {
    param (
        [string]$ProjectName = "Текущий проект"
    )
    
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    
    $report = @"
╔═════════════════════ 🔍 ОТЧЕТ ПО ВАЛИДАЦИИ QA ══════════════════════╗
│ ПРОЕКТ: $ProjectName | ВРЕМЯ: $timestamp            │
├─────────────────────────────────────────────────────────────────────┤
│ 1️⃣ ЗАВИСИМОСТИ: ✓ Совместимы                                       │
│ 2️⃣ КОНФИГУРАЦИЯ: ✓ Валидна и совместима                           │
│ 3️⃣ СРЕДА: ✓ Готова                                               │
│ 4️⃣ МИНИМАЛЬНАЯ СБОРКА: ✓ Успешна и пройдена                      │
├─────────────────────────────────────────────────────────────────────┤
│ 🚨 ИТОГОВЫЙ ВЕРДИКТ: ПРОЙДЕНО                                      │
│ ➡️ Разрешено перейти в режим СБОРКИ                                │
╚═════════════════════════════════════════════════════════════════════╝
"@
    
    # Сохранение статуса валидации (используется механизмом предотвращения перехода в режим СБОРКИ)
    "PASS" | Set-Content -Path "memory-bank\.qa_validation_status"
    
    return $report
}
```

## ❌ ФОРМАТ ОТЧЕТА О НЕУДАЧЕ

Если какой-либо этап валидации не пройден, генерируется следующий подробный отчет о неудаче:

```
⚠️⚠️⚠️ ВАЛИДАЦИЯ QA НЕ ПРОЙДЕНА ⚠️⚠️⚠️

Следующие проблемы должны быть устранены перед переходом в режим СБОРКИ:

1️⃣ ПРОБЛЕМЫ С ЗАВИСИМОСТЯМИ:
- [Подробное описание проблем с зависимостями]
- [Рекомендуемое исправление]

2️⃣ ПРОБЛЕМЫ С КОНФИГУРАЦИЕЙ:
- [Подробное описание проблем с конфигурацией]
- [Рекомендуемое исправление]

3️⃣ ПРОБЛЕМЫ СО СРЕДОЙ:
- [Подробное описание проблем со средой]
- [Рекомендуемое исправление]

4️⃣ ПРОБЛЕМЫ С ТЕСТОВОЙ СБОРКОЙ:
- [Подробное описание проблем с тестовой сборкой]
- [Рекомендуемое исправление]

⚠️ РЕЖИМ СБОРКИ ЗАБЛОКИРОВАН до устранения этих проблем.
Введите 'VAN QA' после устранения проблем для повторной валидации.
```

### Пример генерации отчета о неудаче:
```powershell
function Generate-FailureReport {
    param (
        [string[]]$DependencyIssues = @(),
        [string[]]$ConfigIssues = @(),
        [string[]]$EnvironmentIssues = @(),
        [string[]]$BuildIssues = @()
    )
    
    $report = @"
⚠️⚠️⚠️ ВАЛИДАЦИЯ QA НЕ ПРОЙДЕНА ⚠️⚠️⚠️

Следующие проблемы должны быть устранены перед переходом в режим СБОРКИ:

"@
    
    if ($DependencyIssues.Count -gt 0) {
        $report += @"
1️⃣ ПРОБЛЕМЫ С ЗАВИСИМОСТЯМИ:
$(($DependencyIssues | ForEach-Object { "- $_" }) -join "`n")

"@
    }
    
    if ($ConfigIssues.Count -gt 0) {
        $report += @"
2️⃣ ПРОБЛЕМЫ С КОНФИГУРАЦИЕЙ:
$(($ConfigIssues | ForEach-Object { "- $_" }) -join "`n")

"@
    }
    
    if ($EnvironmentIssues.Count -gt 0) {
        $report += @"
3️⃣ ПРОБЛЕМЫ СО СРЕДОЙ:
$(($EnvironmentIssues | ForEach-Object { "- $_" }) -join "`n")

"@
    }
    
    if ($BuildIssues.Count -gt 0) {
        $report += @"
4️⃣ ПРОБЛЕМЫ С ТЕСТОВОЙ СБОРКОЙ:
$(($BuildIssues | ForEach-Object { "- $_" }) -join "`n")

"@
    }
    
    $report += @"
⚠️ РЕЖИМ СБОРКИ ЗАБЛОКИРОВАН до устранения этих проблем.
Введите 'VAN QA' после устранения проблем для повторной валидации.
"@
    
    # Сохранение статуса валидации (используется механизмом предотвращения перехода в режим СБОРКИ)
    "FAIL" | Set-Content -Path "memory-bank\.qa_validation_status"
    
    return $report
}
```

**Следующий шаг (при УСПЕХЕ):** Загрузить `van-qa-utils/mode-transitions.mdc` для обработки перехода в режим СБОРКИ.
**Следующий шаг (при НЕУДАЧЕ):** Загрузить `van-qa-utils/common-fixes.mdc` для получения рекомендаций по устранению проблем.