#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π Replicate –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
–°–æ–∑–¥–∞–Ω: 2025-01-21 23:00 (UTC+07)
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'src'))

from llm_extractor import ContactExtractor
import time

def test_replicate_provider():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π Replicate –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞"""
    
    print("üß™ –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π Replicate –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞")
    print("=" * 50)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å —Ç–µ—Å—Ç–æ–≤—ã–º —Ä–µ–∂–∏–º–æ–º
    extractor = ContactExtractor(test_mode=True)
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Replicate –ø—Ä–æ–≤–∞–π–¥–µ—Ä
    if 'replicate' in extractor.providers:
        extractor.current_provider = 'replicate'
        print(f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–æ–≤–∞–π–¥–µ—Ä: {extractor.current_provider}")
    else:
        print("‚ùå Replicate –ø—Ä–æ–≤–∞–π–¥–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        return False
    
    # –¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç
    test_text = """
    –î–æ–±—Ä—ã–π –¥–µ–Ω—å!
    
    –ú–µ–Ω—è –∑–æ–≤—É—Ç –ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞, —è —Ä–∞–±–æ—Ç–∞—é –≤ –∫–æ–º–ø–∞–Ω–∏–∏ "–ò–Ω–Ω–æ–¢–µ—Ö" –Ω–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é.
    –ú–æ–π email: anna.smirnova@innotech.ru, —Ç–µ–ª–µ—Ñ–æ–Ω: +7 (495) 987-65-43.
    
    –¢–∞–∫–∂–µ —Ö–æ—á—É –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å –Ω–∞—à–µ–≥–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞:
    –ü–µ—Ç—Ä –ò–≤–∞–Ω–æ–≤, email: petr.ivanov@innotech.ru, —Ç–µ–ª: +7 (495) 987-65-44
    
    –ö–æ–º–ø–∞–Ω–∏—è "–ò–Ω–Ω–æ–¢–µ—Ö"
    –ê–¥—Ä–µ—Å: –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –¢–≤–µ—Ä—Å–∫–∞—è, –¥. 10
    –°–∞–π—Ç: www.innotech.ru
    
    –° —É–≤–∞–∂–µ–Ω–∏–µ–º,
    –ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞
    """
    
    print(f"üìù –¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç ({len(test_text)} —Å–∏–º–≤–æ–ª–æ–≤)")
    print("-" * 30)
    
    try:
        # –ó–∞—Å–µ–∫–∞–µ–º –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        start_time = time.time()
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
        result = extractor.extract_contacts(test_text)
        
        end_time = time.time()
        execution_time = end_time - start_time
        
        print(f"‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {execution_time:.2f} —Å–µ–∫—É–Ω–¥")
        print("-" * 30)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if result['success']:
            print("‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —É—Å–ø–µ—à–Ω–æ")
            print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤: {len(result['contacts'])}")
            
            for i, contact in enumerate(result['contacts'], 1):
                print(f"\nüë§ –ö–æ–Ω—Ç–∞–∫—Ç {i}:")
                print(f"   –ò–º—è: {contact.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                print(f"   Email: {contact.get('email', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
                print(f"   –¢–µ–ª–µ—Ñ–æ–Ω: {contact.get('phone', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
                print(f"   –ö–æ–º–ø–∞–Ω–∏—è: {contact.get('company', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}")
                print(f"   –î–æ–ª–∂–Ω–æ—Å—Ç—å: {contact.get('position', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            stats = extractor.get_stats()
            print(f"\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            print(f"   –£—Å–ø–µ—à–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: {stats['successful_requests']}")
            print(f"   –û—à–∏–±–æ–∫: {stats['failed_requests']}")
            print(f"   –ü–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫: {stats['retry_attempts']}")
            
            return True
            
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
            print(f"–û—à–∏–±–∫–∞: {result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_large_text_chunking():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–±–∏–≤–∫–∏ –±–æ–ª—å—à–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤"""
    
    print("\nüß™ –¢–µ—Å—Ç —Ä–∞–∑–±–∏–≤–∫–∏ –±–æ–ª—å—à–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤")
    print("=" * 50)
    
    extractor = ContactExtractor(test_mode=True)
    
    if 'replicate' in extractor.providers:
        extractor.current_provider = 'replicate'
    else:
        print("‚ùå Replicate –ø—Ä–æ–≤–∞–π–¥–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        return False
    
    # –°–æ–∑–¥–∞–µ–º –±–æ–ª—å—à–æ–π —Ç–µ–∫—Å—Ç (–±–æ–ª–µ–µ 10000 —Å–∏–º–≤–æ–ª–æ–≤)
    base_text = """
    –ö–æ–Ω—Ç–∞–∫—Ç: –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤, email: ivan@company.ru, —Ç–µ–ª: +7-495-123-4567
    –ö–æ–º–ø–∞–Ω–∏—è: –û–û–û "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", –∞–¥—Ä–µ—Å: –ú–æ—Å–∫–≤–∞, —É–ª. –õ–µ–Ω–∏–Ω–∞, 1
    """
    
    large_text = base_text * 100  # –ü—Ä–∏–º–µ—Ä–Ω–æ 15000 —Å–∏–º–≤–æ–ª–æ–≤
    
    print(f"üìù –ë–æ–ª—å—à–æ–π —Ç–µ–∫—Å—Ç ({len(large_text)} —Å–∏–º–≤–æ–ª–æ–≤)")
    
    try:
        start_time = time.time()
        result = extractor.extract_contacts(large_text)
        end_time = time.time()
        
        print(f"‚è±Ô∏è –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")
        
        if result['success']:
            print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –±–æ–ª—å—à–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤: {len(result['contacts'])}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {result.get('error')}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π Replicate –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞")
    print(f"üìÖ –í—Ä–µ–º—è: 2025-01-21 23:00 (UTC+07)")
    print("=" * 60)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    test1_result = test_replicate_provider()
    test2_result = test_large_text_chunking()
    
    print("\n" + "=" * 60)
    print("üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print(f"   –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç Replicate: {'‚úÖ –ü–†–û–ô–î–ï–ù' if test1_result else '‚ùå –ü–†–û–í–ê–õ–ï–ù'}")
    print(f"   –¢–µ—Å—Ç –±–æ–ª—å—à–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤: {'‚úÖ –ü–†–û–ô–î–ï–ù' if test2_result else '‚ùå –ü–†–û–í–ê–õ–ï–ù'}")
    
    if test1_result and test2_result:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞.")