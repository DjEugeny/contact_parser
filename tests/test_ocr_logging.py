#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ OCR –º–æ–¥—É–ª–µ
"""

import sys
import os
from pathlib import Path
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.insert(0, str(Path(__file__).parent.parent / 'src'))

from ocr_processor import OCRProcessor
from ocr_processor_adapter import OCRProcessorAdapter

def test_ocr_logging():
    """
    –¢–µ—Å—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è OCR –º–æ–¥—É–ª—è:
    1. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø—Ä–æ–ø—É—Å–∫–µ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    2. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
    3. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    """
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è OCR –º–æ–¥—É–ª—è")
    print("=" * 50)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º OCR –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä
    ocr_processor = OCRProcessor()
    adapter = OCRProcessorAdapter()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π email —Å –≤–ª–æ–∂–µ–Ω–∏—è–º–∏
    test_date = datetime.now().strftime('%Y-%m-%d')
    test_email = {
        'date': test_date,
        'subject': '–¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ',
        'attachments': [
            {
                'file_path': '/Users/evgenyzach/contact_parser/test_files/test_image.jpg'
            }
        ]
    }
    
    print(f"üìÖ –¢–µ—Å—Ç–æ–≤–∞—è –¥–∞—Ç–∞: {test_date}")
    print(f"üìß –¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ —Å {len(test_email['attachments'])} –≤–ª–æ–∂–µ–Ω–∏–µ–º")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    test_file_path = Path('/Users/evgenyzach/contact_parser/test_files/test_image.jpg')
    if not test_file_path.exists():
        print("‚ö†Ô∏è –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É...")
        test_file_path.parent.mkdir(exist_ok=True)
        test_file_path.write_text("Test image content")
    
    print("üîÑ –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ - –¥–æ–ª–∂–µ–Ω –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª:")
    print("-" * 30)
    
    # –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ - –¥–æ–ª–∂–µ–Ω –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª
    result1 = adapter.process_email_attachments(test_email, None)
    
    print()
    print("üîÑ –í—Ç–æ—Ä–æ–π –∑–∞–ø—É—Å–∫ - –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ñ–∞–π–ª:")
    print("-" * 30)
    
    # –í—Ç–æ—Ä–æ–π –∑–∞–ø—É—Å–∫ - –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ñ–∞–π–ª
    result2 = adapter.process_email_attachments(test_email, None)
    
    print()
    print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞: {len(result1.get('attachments_text', []))} —Ñ–∞–π–ª–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—Ç–æ—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞: {len(result2.get('attachments_text', []))} —Ñ–∞–π–ª–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
    
    return True

if __name__ == '__main__':
    try:
        test_ocr_logging()
        print("\nüéâ –¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω!")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
        import traceback
        traceback.print_exc()