#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
üìß –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ IMAP-–ø–∞—Ä—Å–µ—Ä–∞ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
"""

import os
from datetime import datetime, timedelta
from pathlib import Path
import logging
from src.advanced_email_fetcher import setup_logging, AdvancedEmailFetcherV2, EXCLUDED_EXTENSIONS

def run_test():
    """–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º –≤—Ä–µ–º–µ–Ω–Ω—ã–º –¥–∏–∞–ø–∞–∑–æ–Ω–æ–º"""
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞
    end_date = datetime.now()  # –°–µ–≥–æ–¥–Ω—è
    start_date = end_date - timedelta(days=1)  # 1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –≤—ã–≤–æ–¥–æ–º
    logs_dir = Path("data/logs")
    logger = setup_logging(logs_dir, start_date, end_date)
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∏–ª—å—Ç—Ä–∞—Ö
    logger.info("üîé –¢–ï–°–¢–û–í–´–ô –ó–ê–ü–£–°–ö –ü–ê–†–°–ï–†–ê –° –ü–†–û–í–ï–†–ö–û–ô –§–ò–õ–¨–¢–†–ê–¶–ò–ò:")
    logger.info(f"üö´ –ò—Å–∫–ª—é—á–∞–µ–º—ã–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è: {', '.join(sorted(EXCLUDED_EXTENSIONS))}")
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ø–∞—Ä—Å–µ—Ä–∞
    fetcher = AdvancedEmailFetcherV2(logger)
    
    # –í–∫–ª—é—á–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤
    fetcher.enable_size_logging = True
    
    # –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π
    if hasattr(fetcher, 'specific_excluded_files'):
        logger.info(f"üö´ –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è: {', '.join(sorted(fetcher.specific_excluded_files))}")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø–∏—Å–µ–º
    try:
        emails = fetcher.fetch_emails_by_date_range(start_date, end_date)
        
        # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        logger.info("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –§–ò–õ–¨–¢–†–ê–¶–ò–ò:")
        logger.info(f"‚úâÔ∏è  –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ø–∏—Å–µ–º: {fetcher.stats['processed']}")
        logger.info(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –ø–∏—Å–µ–º: {fetcher.stats['saved']}")
        logger.info(f"üìé –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤–ª–æ–∂–µ–Ω–∏–π: {fetcher.stats['saved_attachments']}")
        logger.info(f"üñºÔ∏è  –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {fetcher.stats['saved_inline_images']}")
        logger.info(f"üö´ –ò—Å–∫–ª—é—á–µ–Ω–æ –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é: {fetcher.stats['excluded_attachments']}")
        logger.info(f"üö´ –ò—Å–∫–ª—é—á–µ–Ω–æ –ø–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞: {fetcher.stats['excluded_filenames']}")
        logger.info(f"üö´ –ò—Å–∫–ª—é—á–µ–Ω–æ –ø–æ —Ä–∞–∑–º–µ—Ä—É: {fetcher.stats['excluded_by_size']}")
        logger.info(f"üö´ –ò—Å–∫–ª—é—á–µ–Ω–æ –ø–æ —Ä–∞–∑–º–µ—Ä–∞–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {fetcher.stats['excluded_by_image_dimensions']}")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")
    finally:
        fetcher.close()
        logger.info("üèÅ –ó–ê–í–ï–†–®–ï–ù–ò–ï –¢–ï–°–¢–û–í–û–ì–û –ó–ê–ü–£–°–ö–ê")

if __name__ == "__main__":
    run_test()
