#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π Replicate API
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from src.llm_extractor import ContactExtractor
import json

def test_contact_extraction():
    """–¢–µ—Å—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º Replicate API...")
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
    extractor = ContactExtractor(test_mode=True)
    
    # –¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏
    test_text = """
    –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É –∫–æ–º–ø–∞–Ω–∏—é –û–û–û "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ë—É–¥—É—â–µ–≥–æ"!
    
    –ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã:
    –î–∏—Ä–µ–∫—Ç–æ—Ä: –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤
    Email: ivan.petrov@techfuture.ru
    –¢–µ–ª–µ—Ñ–æ–Ω: +7 (495) 123-45-67
    
    –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º: –ê–Ω–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞
    Email: anna.sidorova@techfuture.ru
    –ú–æ–±–∏–ª—å–Ω—ã–π: +7 (926) 987-65-43
    
    –û—Ñ–∏—Å: –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –¢–≤–µ—Ä—Å–∫–∞—è, –¥. 10, –æ—Ñ–∏—Å 205
    –°–∞–π—Ç: www.techfuture.ru
    """
    
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã
        result = extractor.extract_contacts(test_text)
        
        print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è:")
        print(json.dumps(result, ensure_ascii=False, indent=2))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = extractor.get_stats()
        print("\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(json.dumps(stats, ensure_ascii=False, indent=2))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤
        health = extractor.get_provider_health()
        print("\nüè• –ó–¥–æ—Ä–æ–≤—å–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤:")
        print(json.dumps(health, ensure_ascii=False, indent=2))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å
        if result.get('success', False):
            contacts = result.get('contacts', [])
            print(f"\n‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á–µ–Ω–æ {len(contacts)} –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
            return True
        else:
            print(f"\n‚ùå –û—à–∏–±–∫–∞: {result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
            return False
            
    except Exception as e:
        print(f"\nüí• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

if __name__ == "__main__":
    success = test_contact_extraction()
    sys.exit(0 if success else 1)