#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
üìß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –≤ advanced_email_fetcher_fixed.py
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –≤–ª–æ–∂–µ–Ω–∏–π
"""

import os
import logging
from pathlib import Path
import sys

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –∏–º–ø–æ—Ä—Ç–∞
sys.path.append('.')

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å
from src.advanced_email_fetcher_fixed import AdvancedEmailFetcherV2, EXCLUDED_EXTENSIONS

def setup_logger():
    """üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ—Å—Ç–æ–≥–æ –ª–æ–≥–≥–µ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    logger = logging.getLogger("EmailFetcherTest")
    logger.setLevel(logging.INFO)
    
    # –û—á–∏—â–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏, –µ—Å–ª–∏ –µ—Å—Ç—å
    if logger.hasHandlers():
        logger.handlers.clear()
    
    # –ö–æ–Ω—Å–æ–ª—å–Ω—ã–π –≤—ã–≤–æ–¥
    handler = logging.StreamHandler()
    formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')
    handler.setFormatter(formatter)
    logger.addHandler(handler)
    
    return logger

def test_specific_files():
    """üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    logger = setup_logger()
    
    # –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞
    fetcher = AdvancedEmailFetcherV2(logger)
    
    # –°–ø–∏—Å–æ–∫ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    test_files = [
        "_.jpg",             # –û–¥–∏–Ω–æ—á–Ω—ã–π —Å–∏–º–≤–æ–ª
        "blocked.gif",       # –ú—É—Å–æ—Ä–Ω—ã–π GIF
        "WRD0004.jpg",       # Microsoft –º—É—Å–æ—Ä
        "image001.png",      # –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –ø–æ–¥–ø–∏—Å–∏
        "logo.png",          # –õ–æ–≥–æ—Ç–∏–ø
        "contract.pdf",      # –û–±—ã—á–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç (–¥–æ–ª–∂–µ–Ω –ø—Ä–æ—Ö–æ–¥–∏—Ç—å)
        "important.xlsx",    # –û–±—ã—á–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç (–¥–æ–ª–∂–µ–Ω –ø—Ä–æ—Ö–æ–¥–∏—Ç—å)
    ]
    
    print("\nÔøΩÔøΩ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –§–ò–õ–¨–¢–†–ê–¶–ò–ò –§–ê–ô–õ–û–í")
    print("="*50)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ specific_excluded_files
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–∏—Å–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π:")
    if hasattr(fetcher, 'specific_excluded_files'):
        for filename in test_files:
            result = filename in fetcher.specific_excluded_files
            status = "üö´ –ò–°–ö–õ–Æ–ß–ï–ù" if result else "‚úÖ –†–ê–ó–†–ï–®–ï–ù"
            print(f"{status}: {filename}")
    else:
        print("‚ùå –û–®–ò–ë–ö–ê: –ê—Ç—Ä–∏–±—É—Ç specific_excluded_files –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º —Ñ–∞–π–ª–æ–≤:")
    for filename in test_files:
        ext = Path(filename).suffix.lower()
        result = ext in EXCLUDED_EXTENSIONS
        status = "üö´ –ò–°–ö–õ–Æ–ß–ï–ù" if result else "‚úÖ –†–ê–ó–†–ï–®–ï–ù"
        print(f"{status}: {filename} (—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ: {ext})")
        
    print("\nüèÅ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û")

if __name__ == "__main__":
    test_specific_files()
