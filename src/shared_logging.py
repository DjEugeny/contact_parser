#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üìù –ï–¥–∏–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π –ø—Ä–æ–µ–∫—Ç–∞
–û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å–∫–≤–æ–∑–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –µ–¥–∏–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º –∏ —É—Ä–æ–≤–Ω—è–º–∏
"""

import logging
import logging.handlers
import sys
from pathlib import Path
from datetime import datetime
import os

class UnifiedLogger:
    """üéØ –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ª–æ–≥–≥–µ—Ä –¥–ª—è –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π –ø—Ä–æ–µ–∫—Ç–∞"""
    
    _loggers = {}
    _initialized = False
    _logs_dir = None
    _console_handler = None
    _file_handler = None
    
    @classmethod
    def setup(cls, logs_dir: Path = None, module_name: str = None):
        """üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –µ–¥–∏–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
        
        if cls._initialized:
            return
            
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤
        if logs_dir is None:
            project_root = Path(__file__).parent.parent
            cls._logs_dir = project_root / "logs"
        else:
            cls._logs_dir = Path(logs_dir)
            
        cls._logs_dir.mkdir(parents=True, exist_ok=True)
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä
        formatter = logging.Formatter(
            '%(asctime)s - %(name)s - %(levelname)s - %(message)s',
            datefmt='%Y-%m-%d %H:%M:%S'
        )
        
        # –ö–æ–Ω—Å–æ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        cls._console_handler = logging.StreamHandler(sys.stdout)
        cls._console_handler.setLevel(logging.INFO)
        cls._console_handler.setFormatter(formatter)
        
        # –§–∞–π–ª–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å —Ä–æ—Ç–∞—Ü–∏–µ–π
        log_filename = cls._logs_dir / f"unified_{datetime.now().strftime('%Y%m%d_%H%M%S')}.log"
        cls._file_handler = logging.FileHandler(log_filename, encoding='utf-8')
        cls._file_handler.setLevel(logging.DEBUG)
        cls._file_handler.setFormatter(formatter)
        
        cls._initialized = True
        
        # –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
        root_logger = logging.getLogger()
        root_logger.setLevel(logging.DEBUG)
        root_logger.addHandler(cls._console_handler)
        root_logger.addHandler(cls._file_handler)
        
        root_logger.info("üìù –ï–¥–∏–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        root_logger.info(f"üìÅ –õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤: {cls._logs_dir}")
    
    @classmethod
    def get_logger(cls, name: str) -> logging.Logger:
        """üìã –ü–æ–ª—É—á–∏—Ç—å –ª–æ–≥–≥–µ—Ä –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–æ–¥—É–ª—è"""
        
        if not cls._initialized:
            cls.setup()
            
        if name in cls._loggers:
            return cls._loggers[name]
            
        logger = logging.getLogger(name)
        logger.setLevel(logging.DEBUG)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –µ—Å–ª–∏ –∏—Ö –µ—â–µ –Ω–µ—Ç
        if not logger.handlers:
            logger.addHandler(cls._console_handler)
            logger.addHandler(cls._file_handler)
        
        cls._loggers[name] = logger
        return logger
    
    @classmethod
    def add_console_handler(cls, logger: logging.Logger):
        """‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Å–æ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –ª–æ–≥–≥–µ—Ä—É"""
        if cls._console_handler and cls._console_handler not in logger.handlers:
            logger.addHandler(cls._console_handler)
    
    @classmethod
    def remove_console_handler(cls, logger: logging.Logger):
        """‚ûñ –£–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Å–æ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑ –ª–æ–≥–≥–µ—Ä–∞"""
        if cls._console_handler and cls._console_handler in logger.handlers:
            logger.removeHandler(cls._console_handler)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
def get_logger(name: str) -> logging.Logger:
    """üìã –ü–æ–ª—É—á–∏—Ç—å –ª–æ–≥–≥–µ—Ä –¥–ª—è –º–æ–¥—É–ª—è"""
    return UnifiedLogger.get_logger(name)

def setup_logging(logs_dir: Path = None):
    """üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
    UnifiedLogger.setup(logs_dir)

def add_module_logging(module_logger: logging.Logger):
    """‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Å–æ–ª—å–Ω—ã–π –≤—ã–≤–æ–¥ –∫ –ª–æ–≥–≥–µ—Ä—É –º–æ–¥—É–ª—è"""
    UnifiedLogger.add_console_handler(module_logger)

def remove_module_logging(module_logger: logging.Logger):
    """‚ûñ –£–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Å–æ–ª—å–Ω—ã–π –≤—ã–≤–æ–¥ –∏–∑ –ª–æ–≥–≥–µ—Ä–∞ –º–æ–¥—É–ª—è"""
    UnifiedLogger.remove_console_handler(module_logger)