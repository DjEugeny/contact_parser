import os
from google.oauth2.service_account import Credentials
from googleapiclient.discovery import build
from googleapiclient.errors import HttpError

# --- –ù–ê–°–¢–†–û–ô–ö–ò ---
# –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É —Ñ–∞–π–ª—É —Å –∫–ª—é—á–∞–º–∏ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
CREDENTIALS_PATH = '../config/service_account.json' 
# --- –ö–û–ù–ï–¶ –ù–ê–°–¢–†–û–ï–ö ---

def audit_service_account_storage(credentials_file):
    """
    –ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –æ—Ç –∏–º–µ–Ω–∏ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –∏ –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤,
    –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –∫–æ—Ç–æ—Ä—ã—Ö –æ–Ω —è–≤–ª—è–µ—Ç—Å—è, –∞ —Ç–∞–∫–∂–µ –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∏—Ö –æ–±—â–∏–π —Ä–∞–∑–º–µ—Ä.
    """
    if not os.path.exists(credentials_file):
        print(f"‚ùå –§–∞–π–ª —Å —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {credentials_file}")
        return

    SCOPES = ['https://www.googleapis.com/auth/drive']
    
    try:
        creds = Credentials.from_service_account_file(credentials_file, scopes=SCOPES)
        drive_service = build('drive', 'v3', credentials=creds)
        print("‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—Ç –∏–º–µ–Ω–∏ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {e}")
        return

    files_found = []
    total_size_bytes = 0
    page_token = None

    print("\nüîç –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤, –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—â–∏—Ö —Å–µ—Ä–≤–∏—Å–Ω–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É...")

    try:
        while True:
            # –ò—â–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã, –≥–¥–µ –≤–ª–∞–¥–µ–ª–µ—Ü - 'me' (—Ç.–µ. —ç—Ç–æ—Ç —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç)
            response = drive_service.files().list(
                q="'me' in owners",
                spaces='drive',
                fields='nextPageToken, files(id, name, size, createdTime)',
                pageToken=page_token
            ).execute()

            files = response.get('files', [])
            files_found.extend(files)
            
            for file in files:
                # –ü–æ–ª–µ 'size' –º–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —É Google Docs/Sheets, –Ω–æ –¥–ª—è –Ω–∏—Ö —Ä–∞–∑–º–µ—Ä = 0
                file_size = int(file.get('size', 0))
                total_size_bytes += file_size

            page_token = response.get('nextPageToken', None)
            if page_token is None:
                break

    except HttpError as error:
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ API: {error}")
        return

    print("-" * 60)
    if not files_found:
        print("üéâ –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –∞–±—Å–æ–ª—é—Ç–Ω–æ –ø—É—Å—Ç–æ–µ.")
    else:
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(files_found)}")
        for f in files_found:
            size_mb = int(f.get('size', 0)) / (1024 * 1024)
            print(f"  - –ò–º—è: {f['name']} (ID: {f['id']})")
            print(f"    –°–æ–∑–¥–∞–Ω: {f['createdTime']}, –†–∞–∑–º–µ—Ä: {size_mb:.4f} MB")
        
        total_size_gb = total_size_bytes / (1024 * 1024 * 1024)
        print("-" * 60)
        print(f"üìà –û–ë–©–ò–ô –†–ê–ó–ú–ï–† –í–°–ï–• –§–ê–ô–õ–û–í: {total_size_gb:.4f} GB")
        print(f"   (–õ–∏–º–∏—Ç —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞: 15.0 GB)")

        # --- –ö–æ–¥ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å—é!) ---
        # print("\nüóëÔ∏è –ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã, —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –∫–æ–¥ –Ω–∏–∂–µ.")
        # confirm = input("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –í–°–ï —ç—Ç–∏ —Ñ–∞–π–ª—ã? (yes/no): ")
        # if confirm.lower() == 'yes':
        #     print("–£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤...")
        #     for f in files_found:
        #         try:
        #             drive_service.files().delete(fileId=f['id']).execute()
        #             print(f"  - –§–∞–π–ª '{f['name']}' —É–¥–∞–ª–µ–Ω.")
        #         except HttpError as error:
        #             print(f"  - –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª '{f['name']}': {error}")
        #     print("‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")

if __name__ == '__main__':
    audit_service_account_storage(CREDENTIALS_PATH)